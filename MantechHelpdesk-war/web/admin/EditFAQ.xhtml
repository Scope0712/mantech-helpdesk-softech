<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core">

    <body>
        <ui:composition template="./templateAdmin.xhtml">
            <ui:define name="content">
                <form action="/MantechHelpdesk-war/EditFAQServlet" method="POST" >
                    <table border="0" style="margin: 10px;">
                        <tbody>
                            <tr>
                                <h1 align="center"><h:outputText value="Edit FAQ Information"></h:outputText></h1>
                            </tr>
                            <tr>
                                <td><h:outputLabel value="FAQ Id:" for="faqId" /></td>
                                <td><h:inputText readonly="true" id="faqId" value="#{FAQBean.myFAQ.faqId}" title="FAQId" style="width: 195px;"/></td>
                                <td><h:message style="color: red" for="faqId"/></td>
                            </tr>
                            <tr>
                                <td><h:outputLabel value="Category" for="categoryId" /></td>
                                <td><h:selectOneMenu id="categoryId" title="CategoryId" value="#{FAQBean.myCategory.categoryId}" style="width: 200px;">
                                        <f:selectItems value="#{CategoryBean.listCategories}"
                                                       var="item" itemLabel="#{item.categoryName}" itemValue="#{item.categoryId}"/>
                                    </h:selectOneMenu></td>
                                <td><h:message style="color: red" for="categoryId"/></td>
                            </tr>
                            <tr>
                                <td><h:outputLabel value="Question" for="question"/></td>
                                <td><h:inputTextarea id="question" value="#{FAQBean.myFAQ.contentQuestion}" style="height: 50px; width: 550px;" title="Question" required="true" requiredMessage="*"/></td>
                                <td><h:message  style="color: red" for="question"/></td>
                            </tr>
                            <tr>
                                <td><h:outputLabel value="Anwswer" for="shortAnswer"/></td>
                                <td><h:inputTextarea id="anwswer" value="#{FAQBean.myFAQ.detailAnswer}" style="height: 150px; width: 520px;" title="Answer" required="true" requiredMessage="*"/>
                                    <script type="text/javascript">
                                            // This is a check for the CKEditor class. If not defined, the paths must be checked.
                                            if ( typeof CKEDITOR == 'undefined' )
                                            {
                                                document.write(
                                                '<strong><span style="color: #ff0000">Error</span>: CKEditor not found</strong>.' +
                                                    'This sample assumes that CKEditor (not included with CKFinder) is installed in' +
                                                    'the "/ckeditor/" path. If you have it installed in a different place, just edit' +
                                                    'this file, changing the wrong paths in the &lt;head&gt; (line 5) and the "BasePath"' +
                                                    'value (line 32).' ) ;
                                            }
                                            else
                                            {


                                                var editor = CKEDITOR.replace( 'anwswer',
                                                {
                                                 /*
						 * Style sheet for the contents
						 */
						contentsCss : 'assets/output_xhtml.css',

						/*
						 * Core styles.
						 */
						coreStyles_bold	: { element : 'span', attributes : {'class': 'Bold'} },
						coreStyles_italic	: { element : 'span', attributes : {'class': 'Italic'}},
						coreStyles_underline	: { element : 'span', attributes : {'class': 'Underline'}},
						coreStyles_strike	: { element : 'span', attributes : {'class': 'StrikeThrough'}, overrides : 'strike' },

						coreStyles_subscript : { element : 'span', attributes : {'class': 'Subscript'}, overrides : 'sub' },
						coreStyles_superscript : { element : 'span', attributes : {'class': 'Superscript'}, overrides : 'sup' },

						/*
						 * Font face
						 */
						// List of fonts available in the toolbar combo. Each font definition is
						// separated by a semi-colon (;). We are using class names here, so each font
						// is defined by {Combo Label}/{Class Name}.
						font_names : 'Comic Sans MS/FontComic;Courier New/FontCourier;Times New Roman/FontTimes',

						// Define the way font elements will be applied to the document. The "span"
						// element will be used. When a font is selected, the font name defined in the
						// above list is passed to this definition with the name "Font", being it
						// injected in the "class" attribute.
						// We must also instruct the editor to replace span elements that are used to
						// set the font (Overrides).
						font_style :
						{
								element		: 'span',
								attributes		: { 'class' : '#(family)' }
						},

						/*
						 * Font sizes.
						 */
						fontSize_sizes : 'Smaller/FontSmaller;Larger/FontLarger;8pt/FontSmall;14pt/FontBig;Double Size/FontDouble',
						fontSize_style :
							{
								element		: 'span',
								attributes	: { 'class' : '#(size)' }
							} ,

						/*
						 * Font colors.
						 */
						colorButton_enableMore : false,

						colorButton_colors : 'FontColor1/FF9900,FontColor2/0066CC,FontColor3/F00',
						colorButton_foreStyle :
							{
								element : 'span',
								attributes : { 'class' : '#(color)' }
							},

						colorButton_backStyle :
							{
								element : 'span',
								attributes : { 'class' : '#(color)BG' }
							},

						/*
						 * Indentation.
						 */
						indentClasses : ['Indent1', 'Indent2', 'Indent3'],

						/*
						 * Paragraph justification.
						 */
						justifyClasses : [ 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyFull' ],

						/*
						 * Styles combo.
						 */
						stylesSet :
								[
									{ name : 'Strong Emphasis', element : 'strong' },
									{ name : 'Emphasis', element : 'em' },

									{ name : 'Computer Code', element : 'code' },
									{ name : 'Keyboard Phrase', element : 'kbd' },
									{ name : 'Sample Text', element : 'samp' },
									{ name : 'Variable', element : 'var' },

									{ name : 'Deleted Text', element : 'del' },
									{ name : 'Inserted Text', element : 'ins' },

									{ name : 'Cited Work', element : 'cite' },
									{ name : 'Inline Quotation', element : 'q' }
								]
                                                });
                                                editor.setData( '#{FAQBean.myFAQ.detailAnswer}' );

                                                // Just call CKFinder.SetupCKEditor and pass the CKEditor instance as the first argument.
                                                // The second parameter (optional), is the path for the CKFinder installation (default = "/ckfinder/").
                                                CKFinder.setupCKEditor( editor, '/MantechHelpdesk-war/ckfinder/' ) ;
                                                //CKFinder.SetupCKEditor( editor, { BasePath : '../../', RememberLastFolder : false } ) ;
                                                // It is also possible to pass an object with selected CKFinder properties as a second argument.
                                                // CKFinder.SetupCKEditor( editor, { BasePath : '../../', RememberLastFolder : false } ) ;
                                            
                                            }
                                    </script></td>
                                <td><h:message  style="color: red" for="shortAnswer"/></td>
                            </tr>
                            <tr>
                                <td><h:outputLabel value="Status" for="status"/></td>
                                <td><h:selectOneMenu id="status" value="#{FAQBean.myFAQ.status}" style="width: 200px;" title="Status" required="true" requiredMessage="*">
                                        <f:selectItem id="si1" itemLabel="Enable" itemValue="Enable" />
                                        <f:selectItem id="si2" itemLabel="Disable" itemValue="Disable" />
                                    </h:selectOneMenu>
                                </td>
                                <td><h:message  style="color: red" for="status"/></td>
                            </tr>
                        </tbody>
                    </table>
                    <h:commandButton  value="Save Information" action="ShowAllFAQs.xhtml" actionListener="#{FAQBean.update}" style="margin-left: 10px"/>
                </form>
            </ui:define>
        </ui:composition>

    </body>
</html>
